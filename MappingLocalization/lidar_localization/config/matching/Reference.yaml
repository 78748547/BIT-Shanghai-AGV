map_path: /home/bit/byc4.1_ws/map/garage_chargeport.pcd   # GlobalMap_filtered.pcd   # 地图存放路径
# map_path: /home/max/BagAndMap/YantaiMap/garage_chargeport.pcd

# 匹配
registration_method: NDT   # 选择点云匹配方法，目前支持：NDT 

# 当前帧
# no_filter指不对点云滤波，在匹配中，理论上点云越稠密，精度越高，但是速度也越慢
# 所以提供这种不滤波的模式做为对比，以方便使用者去体会精度和效率随稠密度的变化关系
frame_filter: voxel_filter # 选择当前帧点云滤波方法，目前支持：voxel_filter、no_filter

# 局部地图
# 局部地图从全局地图切割得到，此处box_filter_size是切割区间
# 参数顺序是min_x, max_x, min_y, max_y, min_z, max_z
box_filter_size: [-75.0, 75.0, -75.0, 75.0, -75.0, 75.0]
local_map_filter: voxel_filter # 选择滑窗地图点云滤波方法，目前支持：voxel_filter、no_filter

# 全局地图
global_map_filter: voxel_filter # 选择滑窗地图点云滤波方法，目前支持：voxel_filter、no_filter


# 各配置选项对应参数
## 匹配相关参数
NDT:
    res : 1.0             #网络结构分辨率       
    step_size : 0.1       #搜索步长 每次迭代参数变化量  
    trans_eps : 0.01      #算法收敛阈值
    max_iter : 30         
## 滤波相关参数 滤波程度和值成正比 
voxel_filter:
    global_map:
        #leaf_size: [0.4, 0.4, 0.4]
        #leaf_size: [0.13, 0.13, 0.13]
        leaf_size: [0.2, 0.2, 0.2]

    local_map:
        #leaf_size: [0.25, 0.25, 0.25]
        #leaf_size: [0.275, 0.275, 0.275]
        #leaf_size: [0.49, 0.49, 0.49]
        leaf_size: [0.53, 0.53, 0.53]
    frame:
        #leaf_size: [0.35, 0.35, 0.35]
        #leaf_size: [0.49, 0.49, 0.49]
        leaf_size: [0.53, 0.53, 0.53]

polygons:
    range1:
        p1: [-143, 440]
        p2: [-143, 258]
        p3: [90, 258]
        p4: [90, 440]
    range2:     
        p1: [-60, -24]
        p2: [-150,-24]
        p3: [-150,-100]
        p4: [-60, -100]       

InitialPose:
    Pose: [1, 1, 0.5]

